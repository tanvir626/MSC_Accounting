// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace Accounting_Module.Models;

public partial class AccountsDBContext : DbContext
{
    public AccountsDBContext(DbContextOptions<AccountsDBContext> options)
        : base(options)
    {
    }

    public virtual DbSet<AccAccount> AccAccounts { get; set; }

    public virtual DbSet<AccCostCenter> AccCostCenters { get; set; }

    public virtual DbSet<AccFy> AccFies { get; set; }

    public virtual DbSet<AccRptTblReceivePayment> AccRptTblReceivePayments { get; set; }

    public virtual DbSet<AccTempVoucher> AccTempVouchers { get; set; }

    public virtual DbSet<AccVoucher> AccVouchers { get; set; }

    public virtual DbSet<AccVoucherType> AccVoucherTypes { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<AccAccount>(entity =>
        {
            entity.HasKey(e => e.AccountId);

            entity.ToTable("ACC_Account");

            entity.Property(e => e.AccountId).HasColumnName("AccountID");
            entity.Property(e => e.AccountName)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.CompanyId).HasColumnName("CompanyID");
            entity.Property(e => e.CreateDate).HasColumnType("datetime");
            entity.Property(e => e.CreateUserId).HasColumnName("CreateUserID");
            entity.Property(e => e.EditDate).HasColumnType("datetime");
            entity.Property(e => e.EditUserId).HasColumnName("EditUserID");
            entity.Property(e => e.IsMaster)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.IsParent)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.OpeningBalance).HasColumnType("decimal(8, 2)");
            entity.Property(e => e.ParentId).HasColumnName("ParentID");
            entity.Property(e => e.Status)
                .IsRequired()
                .HasMaxLength(1)
                .HasDefaultValue("Y")
                .IsFixedLength();
        });

        modelBuilder.Entity<AccCostCenter>(entity =>
        {
            entity.HasKey(e => e.CostCenterId).HasName("PK_Acc_CostCenter");

            entity.ToTable("ACC_CostCenter");

            entity.Property(e => e.CostCenterId).HasColumnName("CostCenterID");
            entity.Property(e => e.CompanyId).HasColumnName("CompanyID");
            entity.Property(e => e.CostCenterName).HasMaxLength(100);
            entity.Property(e => e.CostCenterShortName).HasMaxLength(4);
            entity.Property(e => e.CreateDate).HasColumnType("datetime");
            entity.Property(e => e.CreateUserId).HasColumnName("CreateUserID");
            entity.Property(e => e.EditDate).HasColumnType("datetime");
            entity.Property(e => e.EditUserId).HasColumnName("EditUserID");
            entity.Property(e => e.Status)
                .IsRequired()
                .HasMaxLength(1)
                .HasDefaultValue("Y")
                .IsFixedLength();
        });

        modelBuilder.Entity<AccFy>(entity =>
        {
            entity.HasKey(e => e.Fyid);

            entity.ToTable("ACC_FY");

            entity.Property(e => e.Fyid).HasColumnName("FYID");
            entity.Property(e => e.EndDate).HasColumnType("smalldatetime");
            entity.Property(e => e.Fyname)
                .HasMaxLength(20)
                .HasColumnName("FYName");
            entity.Property(e => e.FyshortCode)
                .HasMaxLength(4)
                .HasColumnName("FYShortCode");
            entity.Property(e => e.StartDate).HasColumnType("smalldatetime");
        });

        modelBuilder.Entity<AccRptTblReceivePayment>(entity =>
        {
            entity.HasKey(e => e.RowId);

            entity.ToTable("ACC_RptTbl_ReceivePayments");

            entity.Property(e => e.RowId).HasColumnName("RowID");
            entity.Property(e => e.AccountId).HasColumnName("AccountID");
            entity.Property(e => e.Bnk120201)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("Bnk_120201");
            entity.Property(e => e.Bnk120202)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("Bnk_120202");
            entity.Property(e => e.Bnk120203)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("Bnk_120203");
            entity.Property(e => e.Bnk120204)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("Bnk_120204");
            entity.Property(e => e.Bnk120205)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("Bnk_120205");
            entity.Property(e => e.Bnk120206)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("Bnk_120206");
            entity.Property(e => e.Bnk120207)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("Bnk_120207");
            entity.Property(e => e.Bnk120208)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("Bnk_120208");
            entity.Property(e => e.Bnk120209)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("Bnk_120209");
            entity.Property(e => e.Bnk120210)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("Bnk_120210");
            entity.Property(e => e.Bnk120211)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("Bnk_120211");
            entity.Property(e => e.Bnk120212)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("Bnk_120212");
            entity.Property(e => e.Bnk120213)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("Bnk_120213");
            entity.Property(e => e.Bnk120214)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("Bnk_120214");
            entity.Property(e => e.Cash).HasColumnType("decimal(18, 0)");
            entity.Property(e => e.CreateUserId)
                .HasMaxLength(10)
                .HasColumnName("CreateUserID");
            entity.Property(e => e.GroupType).HasMaxLength(20);
            entity.Property(e => e.OpeningOrClosing).HasMaxLength(20);
        });

        modelBuilder.Entity<AccTempVoucher>(entity =>
        {
            entity.HasKey(e => e.TempId);

            entity.ToTable("ACC_TempVoucher");

            entity.Property(e => e.TempId).HasColumnName("TempID");
            entity.Property(e => e.AccountId).HasColumnName("AccountID");
            entity.Property(e => e.CreateUserId).HasColumnName("CreateUserID");
            entity.Property(e => e.Credit).HasColumnType("money");
            entity.Property(e => e.Debit).HasColumnType("money");
        });

        modelBuilder.Entity<AccVoucher>(entity =>
        {
            entity.HasKey(e => e.VoucherAutoId).HasName("PK_ACC_Vouchers");

            entity.ToTable("ACC_Voucher");

            entity.Property(e => e.VoucherAutoId).HasColumnName("VoucherAutoID");
            entity.Property(e => e.AccountId).HasColumnName("AccountID");
            entity.Property(e => e.ApprovedDate).HasColumnType("datetime");
            entity.Property(e => e.BankAccountName).HasMaxLength(60);
            entity.Property(e => e.BankId)
                .HasMaxLength(100)
                .HasColumnName("BankID");
            entity.Property(e => e.Cash).HasMaxLength(15);
            entity.Property(e => e.ChequeDate).HasColumnType("smalldatetime");
            entity.Property(e => e.ChequeNo).HasMaxLength(20);
            entity.Property(e => e.CompanyId).HasColumnName("CompanyID");
            entity.Property(e => e.CostCenterId).HasColumnName("CostCenterID");
            entity.Property(e => e.CreateDate).HasColumnType("datetime");
            entity.Property(e => e.CreateUserId).HasColumnName("CreateUserID");
            entity.Property(e => e.CreditAmount).HasColumnType("money");
            entity.Property(e => e.DebitAmount).HasColumnType("money");
            entity.Property(e => e.EditDate).HasColumnType("datetime");
            entity.Property(e => e.EditUserId).HasColumnName("EditUserID");
            entity.Property(e => e.IsOpening)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.Module).HasMaxLength(20);
            entity.Property(e => e.PaymentMode).HasMaxLength(15);
            entity.Property(e => e.PostedFrom).HasMaxLength(50);
            entity.Property(e => e.ReceiveChequeDate).HasColumnType("smalldatetime");
            entity.Property(e => e.ReceiveChequeNo).HasMaxLength(20);
            entity.Property(e => e.RefNo).HasMaxLength(20);
            entity.Property(e => e.Status)
                .IsRequired()
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.UserId)
                .HasMaxLength(10)
                .HasColumnName("UserID");
            entity.Property(e => e.VoucherDate).HasColumnType("smalldatetime");
            entity.Property(e => e.VoucherNumber).HasMaxLength(20);
        });

        modelBuilder.Entity<AccVoucherType>(entity =>
        {
            entity.HasKey(e => e.VoucherTypeId).HasName("PK_ACC_VoucherTypes");

            entity.ToTable("ACC_VoucherType");

            entity.Property(e => e.VoucherTypeId).HasColumnName("VoucherTypeID");
            entity.Property(e => e.ShortCode).HasMaxLength(3);
            entity.Property(e => e.VoucherTypeName).HasMaxLength(20);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}